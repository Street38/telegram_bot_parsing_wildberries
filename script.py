import telebot
from token_bot import TOKEN
from selenium import webdriver
import time
from telebot import types


bot = telebot.TeleBot(TOKEN)

LIST_REPLY = []

@bot.message_handler(commands=['start'])                            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º /start, –≤—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
def keyboard(message):
    startboard = types.ReplyKeyboardMarkup(resize_keyboard= True, row_width= 3, one_time_keyboard=True)
    create = types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—ÄüéÅ')
    edit = types.KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—èüõ†')
    delete = types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—èüóë')
    #delete_all = types.KeyboardButton(text='–í—ã–±–æ—Ä–æ—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µüóë')
    startboard.add(create, edit, delete)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –Ω–∞ www.wildberries.ru –≤ –Ω—É–∂–Ω—ã–π '
                                      '–º–æ–º–µ–Ω—ÇüéÅ, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=startboard)


@bot.message_handler(func= lambda m: m.text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—ÄüéÅ')   # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä' –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞ –Ω–µ–≥–æ —Å—Å—ã–ª–∫—É.
def get_url(message):
    LIST_REPLY.clear()
    try:
        sent = bot.reply_to(message, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –∏ —è —Ç–µ–±–µ –Ω–∞–ø–∏—à—É –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ —Å–Ω–∏–∑–∏—Ç—Å—è')
        bot.register_next_step_handler(sent, request_link)
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_url {e}')

def request_link(message):                                          # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—Å—ã–ª–∫—É / –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'LIST_REPLY'
    try:
        artikel = [i for i in (message.text).split('/') if i.isdigit()]
        link = f'https://www.wildberries.ru/catalog/{artikel[0]}/detail.aspx'
        LIST_REPLY.append(str(message.chat.id) + '-' + link)
        LIST_REPLY.append(link)
        LIST_REPLY.append(message.chat.id)
        sent = bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –Ω–∏–∂–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')
        bot.register_next_step_handler(sent, processing_link)
    except Exception as e:
        bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞, –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ /start')

def processing_link(message):                                       # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, –ø–∞—Ä—Å–∏–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ (–ò—Å–ø–æ–ª—å–∑—É—é selenium, —Ç.–∫ –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å request, —Ç–æ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –±–ª–æ–∫–∏—Ä—É—é—Ç).
    LIST_REPLY.append(message.text)
    bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞, —ç—Ç–æ –∑–∞–π–º–µ—Ç –¥–æ 15 —Å–µ–∫—É–Ω–¥')
    try:
        browser = webdriver.Firefox()
        browser.get(LIST_REPLY[1])
        time.sleep(5)
        block = browser.find_element_by_class_name('same-part-kt__price-block')
        block_arguments = (block.text).split('‚ÇΩ')
        price = (block_arguments[0]).replace(' ', '')
        LIST_REPLY.append(price)
        if save_data():
            bot.send_message(message.chat.id, f'–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ.\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {price} —Ä.'
                                              f'\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ —Ü–µ–Ω–µ {LIST_REPLY[3]}—Ä. –∏ –Ω–∏–∂–µ')
        browser.quit()
    except Exception as e:
        bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞, –ª–∏–±–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. '
                                          '–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ /start')
        browser.quit()
        print(e)

def save_data():                                                    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Ç–æ–≤–∞—Ä—ã / –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å / –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
    with open('links.txt', 'r+') as list:
        if LIST_REPLY[1] not in list.read():
            print(*LIST_REPLY, file=list)
            return True
        else:
            bot.send_message(LIST_REPLY[2], '–î–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.\n'
                                            '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π: /start\n'
                                            '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: /edit')

@bot.message_handler(func= lambda m: m.text == '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—èüóë')     #
def dell_all(message):
    count = get_data(message.from_user.id)
    if count == 0:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ –±—ã–ª–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏')
    else:
        bot.send_message(message.chat.id, f'–í—Å–µ–≥–æ –æ—Ç–º–µ–Ω–µ–Ω–æ {count} –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π')

def get_data(id):
    with open('links.txt', 'r+') as list:
        lines = [i.strip() for i in list.readlines()]

    with open('links.txt', 'w') as list2:
        count = 0
        for i in lines:
            if str(id) not in i:
                print(i, file=list2)
            else:
                count += 1
    return count

@bot.message_handler(func= lambda m: m.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—èüõ†')
def edit_list(message):
    list_product = []
    count = 1
    with open('links.txt', 'r+') as list:
        for i in list:
            if str(message.chat.id) in i:
                value = (str(count) + ' ' + i).split()
                bot.send_message(message.chat.id, f'‚Ññ{value[0]} - —Ç–æ–≤–∞—Ä {value[2]}, —Ü–µ–Ω–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç '
                                                  f'–≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ {value[4]} —Ä.')
                list_product.append(value)
                count += 1
        if count == 1:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π')
        else:
            sent = bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
            bot.register_next_step_handler(sent, processing_message, list_product)

def processing_message(message, *args):
    tracking_number = message.text
    for i in args:
        for j in i:
            if j[0] == str(tracking_number):
                board = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2, one_time_keyboard=True)
                edit2 = types.KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüéÅ')
                dell = types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Äüõ†')
                board.add(edit2, dell)
                bot.send_message(message.chat.id, f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä:{j[2]}\n–¶–µ–Ω–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {j[4]} —Ä.'
                                                  f'\n–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=board)

    @bot.message_handler(func=lambda m: m.text == '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Äüõ†')
    def dell_product(message):
        with open('links.txt', 'r+') as list:
            lines = [i.strip() for i in list.readlines()]
        with open('links.txt', 'w') as list2:
            for i in lines:
                if j[1] not in i:
                    print(i, file=list2)

    @bot.message_handler(func=lambda m: m.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüéÅ')
    def edit_price_level_notification(message):
        sent = bot.reply_to(message, f'–°–µ–π—á–∞—Å —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–∞: {j[4]} —Ä., '
                                          f'—É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ ')
        bot.register_next_step_handler(sent, edit_level_price, j)

def edit_level_price(message, j):
    level_price = message.text
    with open('links.txt', 'r+') as list:
        lines = [i.strip() for i in list.readlines()]
    with open('links.txt', 'w') as list2:
        for i in lines:
            if j[1] in i:
                j[4] = level_price
                print(*j[1:], file=list2)
                bot.send_message(message.chat.id, f'–¶–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞')
                break
            else:
                print(i, file=list2)







bot.polling()